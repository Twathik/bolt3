version: "3.9"

# starts 2 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.

# More info at https://github.com/pi-hole/docker-pi-hole/ and https://docs.pi-hole.net/
services:
  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "./traefik/conf.d:/etc/traefik/conf.d"
      - "./traefik/traefik.toml:/etc/traefik/traefik.toml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8081:80/tcp"
    environment:
      TZ: "America/Chicago"
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - "./pi-hole/etc-pihole:/etc/pihole"
      - "./pi-hole/etc-dnsmasq.d:/etc/dnsmasq.d"
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
  postgres_orthanc:
    image: postgres:13-alpine
    container_name: "postgres_orthanc"
    ports:
      - "5433:5432"
    restart: unless-stopped
    environment:
      POSTGRES_DB: orthanc
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS}
      POSTGRES_HOST: postgres
    volumes:
      - ./orthanc/postgres_database:/var/lib/postgresql/data
    healthcheck:
      test: "exit 0"

  orthanc:
    image: osimis/orthanc
    restart: always
    ports:
      - 4242:4242
      - 8042:8042
    depends_on:
      postgres_orthanc:
        condition: service_healthy
    environment:
      OSIMIS_WEB_VIEWER1_PLUGIN_ENABLED: "true"
      VERBOSE_ENABLED: "true"
      ORTHANC__REGISTERED_USERS: |
        {"admin": "admin"}
      OHIF_PLUGIN_ENABLED: "true"
      ORTHANC_JSON: |
        {
          "PostgreSQL": {
            "EnableIndex": true,
            "EnableStorage": false,
            "Port": 5432,
            "Host": "postgres_orthanc",
            "Database": "orthanc",
            "Username": "${POSTGRESQL_USER}",
            "Password": "${POSTGRESQL_PASS}",
            "EnableSsl": false,
            "Lock": false
          },
          "Worklists": {
            "Enable": true,
            "Database": "/var/lib/orthanc/worklists"
          },
          "DicomModalities" : {
            "horos" : [ "HOROS", "192.168.0.8", 11112 ],
            "findscu" : [ "FINDSCU", "127.0.0.1", 1234 ],
            "modality" : [ "MODALITY", "192.168.1.37", 104 ],
            "inova730" : ["IGS730", "3.3.3.3", 4002],
            "inova730_sub1" : ["IGS730", "192.168.65.1", 4002],
            "echopac" : ["ADEL-PC", "192.168.1.10", 104],
            "vividE92" : ["VIVIDE9", "192.168.1.120", 104],
            "vividE91" : ["VIVIDE9-006630", "192.168.1.100", 104]
          }
        }

    volumes:
      - ./orthanc/db:/var/lib/orthanc/db/
      - ./orthanc/worklists:/var/lib/orthanc/worklists
  ftp-server:
    container_name: ftp
    environment:
      - FTP_PASS=123
      - FTP_USER=user
    image: garethflowers/ftp-server
    ports:
      - 20:20
      - 21:21
      - 40000-40009:40000-40009
    volumes:
      - ./ftp-data:/home/user
